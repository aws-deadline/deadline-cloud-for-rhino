[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "deadline-cloud-for-rhino"
dynamic = ["version"]
readme = "README.md"
license = ""
requires-python = ">=3.9"

dependencies = [
    "deadline == 0.38.*",
    "openjd-adaptor-runtime == 0.5.*",
]

# [project.scripts]
# RhinoAdaptor = "deadline.rhino_adaptor.RhinoAdaptor:main"

[tool.hatch.build]
artifacts = [
  "*_version.py",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "post-release"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.build.hooks.custom]
path = "hatch_custom_hook.py"

[tool.hatch.build.hooks.custom.copy_version_py]
destinations = [
  "src/deadline/rhino_submitter",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/*",
    "hatch_version_hook.py",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/deadline"
]

[tool.mypy]
check_untyped_defs = true
show_error_codes = true
pretty = true
# Tell mypy that there's a namspace package src/deadline
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"

[[tool.mypy.overrides]]
module = ["c4d.*"]
ignore_missing_imports = true

[tool.ruff]
ignore = [
  "E501",
]
line-length = 100

[tool.ruff.isort]
known-first-party = [
  "deadline",
  "openjd"
]

[tool.black]
line-length = 100


[tool.pytest.ini_options]
xfail_strict = true
addopts = [
    "--durations=5",
    "--color=yes",
    "--cov=src/deadline/rhino_submitter",
    "--cov-report=html:build/coverage",
    "--cov-report=xml:build/coverage/coverage.xml",
    "--cov-report=term-missing",
    "--numprocesses=auto"
]
testpaths = [ "test" ]
looponfailroots = [
    "src",
    "test",
]
# looponfailroots is deprecated, this removes the deprecation from the test output
filterwarnings = [
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source_pkgs = [ "deadline/rhino_submitter" ]
branch = true
parallel = true
omit = [ "**/__main__.py", "**/_version.py" ]

[tool.coverage.paths]
source =  [
    "src/"
]

[tool.coverage.report]
show_missing = true
fail_under = 40
